
// stringify the given arg

-string(arg)
  type(arg) + ' ' + arg

// require a color

require-color(color)
 unless color is a 'color' or color is a 'hsla' 
   error('RGB or HSL value expected, got a ' + -string(color))

// require a unit

require-unit(n)
  unless n is a 'unit'
    error('unit expected, got a ' + -string(n))

// check if n is an odd number

odd(n)
  1 == n % 2

// check if n is an even number

even(n)
  0 == n % 2

// check if color is light

light(color)
  lightness(color) >= 50%

// check if color is dark

dark(color)
  lightness(color) < 50%

// desaturate color by amount

desaturate(color, amount)
  require-color(color)
  require-unit(amount)
  hsla(hue(color), saturation(color) - amount, lightness(color), alpha(color))

// saturate color by amount

saturate(color, amount)
  require-color(color)
  require-unit(amount)
  hsla(hue(color), saturation(color) + amount, lightness(color), alpha(color))

// darken by the given amount

darken(color, amount)
  require-color(color)
  require-unit(amount)
  hsla(hue(color), saturation(color), lightness(color) - amount, alpha(color))

// lighten by the given amount

lighten(color, amount)
  require-color(color)
  require-unit(amount)
  hsla(hue(color), saturation(color), lightness(color) + amount, alpha(color))

// decrease the current lightness value by the given amount

lighten-by(color, amount)
  require-color(color)
  require-unit(amount)
  l = lightness(color)
  hsla(hue(color), saturation(color), l + (l || 100) * amount / 100, alpha(color))
